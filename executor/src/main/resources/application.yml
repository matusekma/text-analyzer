server:
  error:
    include-message: always
    include-binding-errors: always
  port: 8081

spring:
  application:
    name: executor
  datasource:
    url: ${JDBC_DATABASE_URL}
    username: ${JDBC_DATABASE_USERNAME}
    password: ${JDBC_DATABASE_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    database: POSTGRESQL
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  servlet:
    multipart:
      max-file-size: 20MB
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${AUTH_URL}
          jwk-set-uri: ${AUTH_URL}/oauth2/jwks
  liquibase:
    enabled: false
  cloud:
    circuitbreaker:
      resilience4j:
        enabled: true

resilience4j:
  circuitbreaker:
    configs:
      default:
        slidingWindowSize: 100
        permittedNumberOfCallsInHalfOpenState: 10
        waitDurationInOpenState: 10000
        failureRateThreshold: 60
        eventConsumerBufferSize: 10
        registerHealthIndicator: true

eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_SERVER_URL}
    register-with-eureka: true
    healthcheck:
      enabled: true
  instance:
    leaseRenewalIntervalInSeconds: 5
    preferIpAddress: true

logging:
  level:
    root: INFO
    org.springframework.web: INFO
    org.springframework.security: INFO
    org.springframework.security.oauth2: INFO

application:
  services:
    profanityFilter:
      url: ${PROFANITY_FILTER_URL}
    languageDetection:
      url: ${LANGUAGE_DETECTION_URL}
    punctuationRestoration:
      url: ${PUNCTUATION_RESTORATION_URL}
    sentimentAnalysis:
      url: ${SENTIMENT_ANALYSIS_URL}
    keywordExtraction:
      url: ${KEYWORD_EXTRACTION_URL}
    NERposTagging:
      url: ${NER_POS_URL}

